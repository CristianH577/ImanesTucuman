{"version":3,"file":"static/js/235.c98652a3.chunk.js","mappings":"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","sources":["views/SearchView/ItemsView.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","views/SearchView.js","../node_modules/@nextui-org/use-disclosure/dist/index.mjs","../node_modules/@mui/icons-material/esm/Search.js","components/InputSearch.js"],"sourcesContent":["import { useOutletContext } from \"react-router\";\r\n\r\nimport ImageCustom from \"../../components/ImageCustom\";\r\nimport ButtonAddCart from \"../../components/ButtonAddCart\";\r\nimport PriceLabel from \"../../components/PriceLabel\";\r\n\r\nimport {\r\n  SVGArrastre,\r\n  SVGCuadrado,\r\n  SVGCuadradoFresado,\r\n  SVGRedondo,\r\n  SVGRedondoFresado,\r\n} from \"../../assets/imanes/svgs\";\r\nimport { SVGViewGridAdd } from \"../../assets/layout/svgs\";\r\n\r\nconst contextImg = require.context(\"../../assets/items\");\r\n\r\nconst SVG_FORMA = {\r\n  redondo: SVGRedondo,\r\n  cuadrado: SVGCuadrado,\r\n  \"redondo fresado\": SVGRedondoFresado,\r\n  \"cuadrado fresado\": SVGCuadradoFresado,\r\n  arrastre: SVGArrastre,\r\n};\r\n\r\nexport default function ItemsView({\r\n  items = [],\r\n  showMoreItems = () => {},\r\n  totalItems = 0,\r\n}) {\r\n  const context = useOutletContext();\r\n  const cart = context.cart.value;\r\n\r\n  return (\r\n    <section className=\"w-full grid xs:grid-cols-[repeat(auto-fit,_minmax(160px,_1fr))] sm:grid-cols-[repeat(auto-fit,_minmax(200px,_1fr))] gap-2 sm:gap-4 md:gap-10 justify-center\">\r\n      {items.map((item) => {\r\n        const SvgForma =\r\n          item.imgs_data.preview.type === \"svg\" && item.imgs_data.preview.src\r\n            ? SVG_FORMA?.[item.imgs_data.preview.src]\r\n            : false;\r\n\r\n        return (\r\n          <div key={item.id} className=\"relative\">\r\n            <ButtonAddCart\r\n              inCart={item.id in cart}\r\n              itemData={item}\r\n              handleAdd={context.cart.add}\r\n              className=\"absolute top-2 z-20 right-2\"\r\n            />\r\n\r\n            <a href={`#search/${item.id}`} title=\"Ver el producto\" className=\"\">\r\n              <div className=\"hover:scale-105 transition-transform bg-content1 rounded-lg shadow-md\">\r\n                {SvgForma ? (\r\n                  <div className=\"shadow-small rounded-lg p-4 self-center h-[150px] w-full\">\r\n                    <SvgForma className=\"h-full w-full\" />\r\n                  </div>\r\n                ) : (\r\n                  <ImageCustom\r\n                    alt={`Imagen de ${item.label}`}\r\n                    className=\"w-full object-contain p-4 h-[150px] rounded-lg shadow-small\"\r\n                    src={contextImg(\"./\" + item.imgs_data.preview.src)}\r\n                    width=\"100%\"\r\n                  />\r\n                )}\r\n\r\n                <div className=\"p-2\">\r\n                  <p className=\"text-second self-start text-neutral-400 capitalize line-clamp-1\">\r\n                    {item.categorie} {item?.subcategorie || \"\"}\r\n                  </p>\r\n                  <b className=\"line-clamp-1 text-start\">{item.label}</b>\r\n                  {item?.noStock ? (\r\n                    <b className=\"text-danger\">Sin Stock</b>\r\n                  ) : null}\r\n\r\n                  <PriceLabel\r\n                    itemData={item}\r\n                    classNames={{\r\n                      price:\r\n                        \"font-semibold text-tert text-custom2 dark:text-custom1\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {items.length < totalItems && (\r\n        <div\r\n          className=\"hover:scale-105 transition-transform rounded-lg cursor-pointer shadow-md bg-warning h-fit w-fit self-center place-self-center\"\r\n          onClick={showMoreItems}\r\n        >\r\n          <div className=\"shadow-small rounded-lg p-4 self-center h-[100px]\">\r\n            <SVGViewGridAdd className=\"h-full w-full\" />\r\n          </div>\r\n\r\n          <div className=\"flex- flex items-center justify-center p-3 dark:drop-shadow-[0_0_3px_black] text-tert\">\r\n            <b>Cargar Mas</b>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","import { lazy, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\n\r\nimport { cartItemsComparator } from \"../libs/functions\";\r\n\r\nimport { DB_ALL } from \"../consts/dbs\";\r\nimport { FILTERS_VALUES_DEFAULT } from \"../consts/siteConfig\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Link,\r\n  Spinner,\r\n  useDisclosure,\r\n} from \"@nextui-org/react\";\r\n\r\nimport ItemsView from \"./SearchView/ItemsView\";\r\nimport SuspenseCustom from \"../components/SuspenseCustom\";\r\nimport InputSearch from \"../components/InputSearch\";\r\n\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\n\r\nimport { SVGBroom } from \"../assets/layout/svgs\";\r\n\r\nconst DrawerFilters = lazy(() => import(\"./SearchView/DrawerFilters\"));\r\n\r\nconst itemsPerView = 15;\r\n\r\nexport default function SearchView() {\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [filtersValues, setFiltersValues] = useState(FILTERS_VALUES_DEFAULT);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const { isOpen, onOpen, onOpenChange } = useDisclosure();\r\n\r\n  const searhItems = () => {\r\n    setLoading(true);\r\n    let items_ = structuredClone(DB_ALL);\r\n\r\n    items_ = items_.filter((item) => !item?.hidden);\r\n\r\n    if (filtersValues?.categorie) {\r\n      items_ = items_.filter((item) => {\r\n        const categorie = filtersValues.categorie;\r\n        if (categorie === \"otros\") {\r\n          return item.categorie === categorie || !item?.categorie;\r\n        } else {\r\n          return item.categorie === categorie;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (filtersValues?.subcategorie) {\r\n      items_ = items_.filter((item) => {\r\n        return item.subcategorie === filtersValues.subcategorie;\r\n      });\r\n    }\r\n\r\n    [\"forma\"].forEach((filterKey) => {\r\n      if (filtersValues?.[filterKey]) {\r\n        const filter_value = String(filtersValues[filterKey])\r\n          .toLowerCase()\r\n          .replace(/_/g, \" \");\r\n        items_ = items_.filter(\r\n          (item) =>\r\n            item?.info &&\r\n            item.info?.[filterKey] &&\r\n            item.info[filterKey].toLowerCase().includes(filter_value)\r\n        );\r\n      }\r\n    });\r\n\r\n    if (filtersValues?.priceMin) {\r\n      const min = Number(filtersValues?.priceMin);\r\n      items_ = items_.filter((item) => {\r\n        const usePrice = item.price_data.usePrice;\r\n        const price = item.price_data.prices[usePrice];\r\n        return Number(price) >= min;\r\n      });\r\n    }\r\n    if (filtersValues?.priceMax) {\r\n      const max = Number(filtersValues?.priceMax);\r\n      items_ = items_.filter((item) => {\r\n        const usePrice = item.price_data.usePrice;\r\n        const price = item.price_data.prices[usePrice];\r\n        return Number(price) <= max;\r\n      });\r\n    }\r\n\r\n    if (filtersValues?.text) {\r\n      const text_ = filtersValues.text\r\n        .toLowerCase()\r\n        .normalize(\"NFD\")\r\n        .replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n      items_ = items_.filter((item) =>\r\n        JSON.stringify(item)\r\n          .toLowerCase()\r\n          .normalize(\"NFD\")\r\n          .replace(/[\\u0300-\\u036f]/g, \"\")\r\n          .includes(filtersValues.text.toLowerCase(text_))\r\n      );\r\n    }\r\n\r\n    if (filtersValues?.orderBy) {\r\n      const [col, order] = filtersValues.orderBy.split(\"-\");\r\n      items_.sort(cartItemsComparator(col, order));\r\n    }\r\n\r\n    setItems(items_);\r\n    setVisibleItems(items_.slice(0, itemsPerView * filtersValues.page));\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    let href = \"?orderBy=price-asc\";\r\n    if (inputText) {\r\n      href += \"&text=\" + inputText;\r\n    }\r\n    navigate(href);\r\n  };\r\n  const handleClean = () => {\r\n    setInputText(\"\");\r\n  };\r\n\r\n  const showMoreItems = () => {\r\n    let href = \"\";\r\n    if (search) {\r\n      href += search + \"&\";\r\n    } else {\r\n      href += \"?\";\r\n    }\r\n    href += \"page=\" + (Number(filtersValues.page) + 1);\r\n    navigate(href);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filters_values_ = structuredClone(FILTERS_VALUES_DEFAULT);\r\n\r\n    if (search) {\r\n      const params = new URLSearchParams(search);\r\n      const paramsObj = {};\r\n      Array.from(params.entries()).map(\r\n        ([k, v]) => (paramsObj[k] = v.replace(/%/g, \" \"))\r\n      );\r\n\r\n      Object.keys(paramsObj).forEach((key) => {\r\n        if (filters_values_.hasOwnProperty(key)) {\r\n          filters_values_[key] = paramsObj[key];\r\n          filters_values_.apply = true;\r\n        }\r\n      });\r\n\r\n      const text = filters_values_?.text;\r\n      if (text) setInputText(text);\r\n    }\r\n\r\n    setFiltersValues(filters_values_);\r\n  }, [search]);\r\n\r\n  useEffect(searhItems, [filtersValues]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex flex-col items-center gap-2\">\r\n        <article className=\"flex flex-col gap-2 items-center xs:flex-row\">\r\n          <InputSearch\r\n            value={inputText}\r\n            setValue={setInputText}\r\n            handleSearch={handleSearch}\r\n          />\r\n\r\n          <ButtonGroup variant=\"ghost\">\r\n            <Button\r\n              isIconOnly\r\n              title=\"Limpiar filtros\"\r\n              as={Link}\r\n              href=\"#search?orderBy=price-asc\"\r\n              onPress={handleClean}\r\n            >\r\n              <SVGBroom className=\"h-3/5 w-fit\" />\r\n            </Button>\r\n\r\n            <Button\r\n              isIconOnly\r\n              color={filtersValues?.apply ? \"warning\" : \"default\"}\r\n              title=\"Abrir lista de filtros\"\r\n              onPress={onOpen}\r\n            >\r\n              <FilterAltIcon className=\"h-4/5 w-fit\" />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </article>\r\n\r\n        <article className=\"text-center text-neutral-400\">\r\n          <span>Total: {items.length}</span>\r\n          <br />\r\n          <span className=\"text-second\">Los precios pueden variar.</span>\r\n        </article>\r\n\r\n        <SuspenseCustom\r\n          classnames={{\r\n            suspenseFall: \"absolute w-screen min-h-[100dvh] bg-black/50 z-30\",\r\n          }}\r\n        >\r\n          <DrawerFilters\r\n            isOpen={isOpen}\r\n            onOpenChange={onOpenChange}\r\n            filtersValues={filtersValues}\r\n          />\r\n        </SuspenseCustom>\r\n      </section>\r\n\r\n      {items.length < 1 ? (\r\n        <b>Sin Resultados</b>\r\n      ) : loading ? (\r\n        <Spinner color=\"secondary\" />\r\n      ) : (\r\n        <ItemsView\r\n          items={visibleItems}\r\n          showMoreItems={showMoreItems}\r\n          totalItems={items.length}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// src/index.ts\nimport { chain } from \"@react-aria/utils\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { useCallbackRef } from \"@nextui-org/use-callback-ref\";\nimport { useCallback, useId } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    id: idProp,\n    defaultOpen,\n    isOpen: isOpenProp,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    onChange = () => {\n    }\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpen, setIsOpen] = useControlledState(isOpenProp, defaultOpen || false, onChange);\n  const reactId = useId();\n  const id = idProp || reactId;\n  const isControlled = isOpenProp !== void 0;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onOpenChange = useCallback(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onOpenChange,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: chain(props2.onClick, onOpenChange)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\nexport {\n  useDisclosure\n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import { Input, Button } from \"@nextui-org/react\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nexport default function InputSearch({\r\n  value = false,\r\n  setValue = () => {},\r\n  handleSearch = () => {},\r\n}) {\r\n  const handleKey = (e) => {\r\n    if (e.key === \"Enter\") handleSearch();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <Button\r\n        isIconOnly\r\n        variant=\"light\"\r\n        title=\"Buscar\"\r\n        className=\"border-3 border-custom1-3 border-e-0 rounded-e-none\"\r\n        onPress={handleSearch}\r\n      >\r\n        <SearchIcon className=\"h-3/5 w-fit\" />\r\n      </Button>\r\n\r\n      <Input\r\n        name=\"text\"\r\n        placeholder=\"Buscar...\"\r\n        title=\"Buscar...\"\r\n        classNames={{\r\n          inputWrapper: \"border-3 border-custom1-3 border-s-0 rounded-s-none\",\r\n        }}\r\n        value={value}\r\n        onValueChange={(e) => setValue(e)}\r\n        onKeyDown={handleKey}\r\n        isClearable\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["contextImg","require","SVG_FORMA","redondo","SVGRedondo","cuadrado","SVGCuadrado","SVGRedondoFresado","SVGCuadradoFresado","arrastre","SVGArrastre","ItemsView","_ref","items","showMoreItems","totalItems","context","useOutletContext","cart","value","_jsxs","className","children","map","item","SvgForma","imgs_data","preview","type","src","_jsx","ButtonAddCart","inCart","id","itemData","handleAdd","add","href","concat","title","ImageCustom","alt","label","width","categorie","subcategorie","noStock","PriceLabel","classNames","price","length","onClick","SVGViewGridAdd","createSvgIcon","d","DrawerFilters","lazy","itemsPerView","SearchView","search","useLocation","navigate","useNavigate","setItems","useState","filtersValues","setFiltersValues","FILTERS_VALUES_DEFAULT","visibleItems","setVisibleItems","loading","setLoading","inputText","setInputText","isOpen","onOpen","onOpenChange","props","arguments","undefined","idProp","defaultOpen","isOpenProp","onClose","onCloseProp","onOpenProp","onChange","onOpenPropCallbackRef","useCallbackRef","onClosePropCallbackRef","setIsOpen","useControlledState","reactId","useId","isControlled","useCallback","getButtonProps","props2","_objectSpread","chain","getDisclosureProps","hidden","useDisclosure","useEffect","filters_values_","structuredClone","params","URLSearchParams","paramsObj","Array","from","entries","k","v","replace","Object","keys","forEach","key","hasOwnProperty","apply","text","searhItems","items_","DB_ALL","filter","filterKey","filter_value","String","toLowerCase","_item$info","info","includes","priceMin","min","Number","usePrice","price_data","prices","priceMax","max","text_","normalize","JSON","stringify","orderBy","col","order","split","sort","cartItemsComparator","slice","page","_Fragment","InputSearch","setValue","handleSearch","ButtonGroup","variant","Button","isIconOnly","as","Link","onPress","handleClean","SVGBroom","color","FilterAltIcon","SuspenseCustom","classnames","suspenseFall","Spinner","SearchIcon","Input","name","placeholder","inputWrapper","onValueChange","e","onKeyDown","isClearable"],"sourceRoot":""}