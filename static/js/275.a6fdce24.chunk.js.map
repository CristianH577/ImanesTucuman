{"version":3,"file":"static/js/275.a6fdce24.chunk.js","mappings":"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","sources":["views/Imanes/TablePrices.js","views/Imanes/DragMagnets.js","views/Imanes.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useInView } from \"framer-motion\";\r\n\r\nimport { scrollStyle } from \"../../libs/tvs\";\r\n\r\nimport { toPriceFormat } from \"../../libs/functions\";\r\n\r\nimport { Button } from \"@nextui-org/react\";\r\n\r\nimport ButtonAddCart from \"../../components/ButtonAddCart\";\r\n\r\nimport CompareIcon from \"@mui/icons-material/Compare\";\r\n\r\nconst rowsPerView = 10;\r\n\r\nexport default function TablePrices({\r\n  setItemToComparate = () => {},\r\n  tableAriaLabel = \"\",\r\n  measureFormat = \"\",\r\n  rows = [],\r\n  cart = {},\r\n  handleAdd = () => {},\r\n}) {\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref);\r\n\r\n  const [totalVisibleRows, setTotalVisibleRows] = useState(rowsPerView);\r\n  const visibleRows = rows.slice(0, totalVisibleRows);\r\n\r\n  const showMore = () => {\r\n    const total_ = totalVisibleRows + rowsPerView;\r\n    setTotalVisibleRows(total_);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isInView) showMore();\r\n  }, [isInView]);\r\n\r\n  return (\r\n    <div\r\n      data-slot=\"table-container\"\r\n      className={\"w-full overflow-x-auto \" + scrollStyle}\r\n    >\r\n      <table\r\n        aria-label={tableAriaLabel || null}\r\n        className=\"w-full xs:min-w-[750px] text-tert table- max-xs:border-separate border-spacing-y-3\"\r\n      >\r\n        <thead className=\"border-b-3 max-xs:hidden\">\r\n          <tr>\r\n            <th className=\"p-2 border-e-3\">\r\n              <p>Medida</p>\r\n              {measureFormat || null}\r\n            </th>\r\n\r\n            <th colSpan={4} className=\"p-2\">\r\n              <p>\r\n                Precio(xU)\r\n                <span className=\"font-size-secondary\">Unidades minimas</span>\r\n              </p>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {visibleRows?.map((item) => {\r\n            const noStock = item?.noStock || false;\r\n            const inCart = item.id in cart;\r\n\r\n            return (\r\n              <tr\r\n                key={item.id}\r\n                className=\"group hover:font-semibold hover:bg-secondary/30 data-[incart=false]:data-[nostock=true]:bg-divider data-[incart=true]:!bg-success/30 max-xs:grid max-xs:grid-cols-1 max-xs:border-3 max-xs:rounded-lg max-xs:mb-3 xs:even:text-custom2-10 xs:dark:even:text-custom1\"\r\n                data-nostock={noStock}\r\n                data-incart={inCart}\r\n              >\r\n                <td className=\"px-2 py-1 xs:py-2 whitespace-nowrap xs:col-span-2 max-xs:border-b-3 xs:border-e-3 xs:text-start\">\r\n                  <div className=\"flex gap-1 xs:gap-2 justify-end items-center w-full max-xs:flex-col xs:flex-row-reverse break-all\">\r\n                    <a\r\n                      href={\"#search/\" + item.id}\r\n                      title=\"Ver producto\"\r\n                      className=\"max-xs:whitespace-normal\"\r\n                    >\r\n                      {item.label}\r\n                    </a>\r\n\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      isIconOnly\r\n                      className=\"shadow-md\"\r\n                      title=\"Ver referencia de tamaños\"\r\n                      onPress={() => setItemToComparate(item)}\r\n                    >\r\n                      <CompareIcon className=\"h-7 w-fit\" />\r\n                    </Button>\r\n                  </div>\r\n                </td>\r\n\r\n                {item?.price_data?.prices_qtts &&\r\n                  Object.entries(item.price_data.prices_qtts).map(\r\n                    ([qtt, price]) => {\r\n                      const inCart_qtt =\r\n                        inCart && cart[item.id].qtt === Number(qtt);\r\n                      return (\r\n                        <td\r\n                          key={`precio_x${qtt}`}\r\n                          className=\"px-2 py-1 xs:py-2\"\r\n                        >\r\n                          <div className=\"flex flex-col gap-1 xs:gap-2 justify-end items-center\">\r\n                            <p className=\"max-xs:break-all\">\r\n                              {toPriceFormat(price)}\r\n                              <span className=\"font-size-secondary\">\r\n                                ({qtt}u)\r\n                              </span>\r\n                            </p>\r\n\r\n                            <ButtonAddCart\r\n                              size=\"sm\"\r\n                              inCart={inCart_qtt}\r\n                              itemData={item}\r\n                              handleAdd={() => {\r\n                                let qtt_ = 0;\r\n                                if (!inCart_qtt) qtt_ = Number(qtt);\r\n                                item.qtt = qtt_;\r\n\r\n                                handleAdd(item);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      );\r\n                    }\r\n                  )}\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          <tr>\r\n            <td className=\"pt-4\">\r\n              {totalVisibleRows < rows.length && (\r\n                <Button\r\n                  ref={ref}\r\n                  size=\"lg\"\r\n                  className=\"bg-custom1-2 text-custom2--2 font-bold text-xl hover:scale-105\"\r\n                  title=\"Mostrar mas\"\r\n                  onPress={() => showMore()}\r\n                >\r\n                  +Mas\r\n                </Button>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"@nextui-org/react\";\r\n\r\nimport { scrollStyle } from \"../../libs/tvs\";\r\n\r\nimport ButtonAddCart from \"../../components/ButtonAddCart\";\r\nimport PriceLabel from \"../../components/PriceLabel\";\r\n\r\nimport CompareIcon from \"@mui/icons-material/Compare\";\r\n\r\nimport { SVGDragMagnetMeasures } from \"../../assets/imanes/svgs\";\r\n\r\nfunction DragMagnets({\r\n  setItemToComparate = () => {},\r\n  rows = [],\r\n  cart = {},\r\n  handleAdd = () => {},\r\n}) {\r\n  const cols = [\r\n    { id: \"alto\", label: \"B\" },\r\n    { id: \"alto total\", label: \"C\" },\r\n    { id: \"peso\", label: \"Peso\" },\r\n    { id: \"fuerza\", label: \"Fuerza\" },\r\n  ];\r\n  const cols_measure = {\r\n    alto: \"mm\",\r\n    \"alto total\": \"mm\",\r\n    peso: \"g\",\r\n    fuerza: \"kg\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-center h-[250px]\">\r\n        <SVGDragMagnetMeasures className=\"h-full w-full max-h-[250px]\" />\r\n      </div>\r\n\r\n      <div\r\n        data-slot=\"table-container\"\r\n        className={\"w-full overflow-x-auto \" + scrollStyle}\r\n      >\r\n        <table\r\n          aria-label=\"Tabla de precios: imanes de arrastre\"\r\n          className=\"w-full sm:min-w-[750px] text-tert table-dinamic max-sm:border-separate border-spacing-y-3 lg:w-fit lg:place-self-center\"\r\n        >\r\n          <thead className=\"border-b-3\">\r\n            <tr>\r\n              <th className=\"p-2 border-e-3\">A</th>\r\n\r\n              {cols.map((col) => (\r\n                <th key={col.id} className=\"p-2\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <span className=\"capitalize\">{col.label}</span>(\r\n                    {cols_measure?.[col.id]})\r\n                  </div>\r\n                </th>\r\n              ))}\r\n\r\n              <th className=\"p-2 text-end\">Precio</th>\r\n              <th className=\"p-2\"></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {rows.map((item) => {\r\n              const noStock = item?.noStock;\r\n              const inCart = item.id in cart;\r\n\r\n              return (\r\n                <tr\r\n                  key={item.id}\r\n                  className=\"even:text-custom2-10 dark:even:text-custom1 group hover:text-white hover:font-semibold\"\r\n                >\r\n                  <td\r\n                    className=\"p-2 text-start whitespace-nowrap sm:border-e-3 max-sm:border-3 max-sm:rounded-t-lg data-[incart=false]:group-hover:bg-custom2 data-[nostock=true]:bg-divider data-[incart=true]:!bg-success/30\"\r\n                    data-incart={inCart}\r\n                    data-nostock={noStock}\r\n                  >\r\n                    <div className=\"flex gap-2 justify-end items-center w-full sm:flex-row-reverse\">\r\n                      <span>{item.label}</span>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        isIconOnly\r\n                        className=\"shadow-md\"\r\n                        title=\"Ver referencia de tamaños\"\r\n                        onPress={() => setItemToComparate(item)}\r\n                      >\r\n                        <CompareIcon className=\"h-7 w-fit\" />\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n\r\n                  {cols.map((col) => (\r\n                    <td\r\n                      key={`${item.id}_${col.id}`}\r\n                      className=\"p-2 hover:!text-custom1-5 max-sm:last:border-b-3 max-sm:border-x-3 max-sm:last:rounded-b-lg group-hover:bg-custom2 data-[nostock=true]:bg-divider\"\r\n                      data-nostock={noStock}\r\n                      data-label={`${col.label}(${cols_measure?.[col.id]})`}\r\n                    >\r\n                      {item.measures?.[col.id] || \"-\"}\r\n                    </td>\r\n                  ))}\r\n\r\n                  <td\r\n                    className=\"p-2 hover:!text-custom1-5 max-sm:last:border-b-3 max-sm:border-x-3 max-sm:last:rounded-b-lg group-hover:bg-custom2 data-[nostock=true]:bg-divider\"\r\n                    data-nostock={noStock}\r\n                    data-label=\"Precio\"\r\n                  >\r\n                    <PriceLabel itemData={item} />\r\n                  </td>\r\n\r\n                  <td\r\n                    className=\"p-2 hover:!text-custom1-5 max-sm:last:border-b-3 max-sm:border-x-3 max-sm:last:rounded-b-lg group-hover:bg-custom2 data-[nostock=true]:bg-divider\"\r\n                    data-nostock={noStock}\r\n                    data-label=\"\"\r\n                  >\r\n                    <ButtonAddCart\r\n                      inCart={inCart}\r\n                      itemData={item}\r\n                      handleAdd={() => {\r\n                        let qtt_ = 0;\r\n                        if (!inCart) qtt_ = 1;\r\n                        item.qtt = qtt_;\r\n\r\n                        handleAdd(item);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n\r\n            <tr>\r\n              <td colSpan=\"full\" className=\"pt-4\"></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DragMagnets;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router\";\r\n\r\nimport { handlePriceData } from \"../libs/functions\";\r\n\r\nimport { DB_ALL } from \"../consts/dbs\";\r\n\r\nimport { Tabs, Tab } from \"@nextui-org/react\";\r\n\r\nimport TablePrices from \"./Imanes/TablePrices\";\r\nimport DragMagnets from \"./Imanes/DragMagnets\";\r\n\r\nimport {\r\n  SVGRedondoFresadoMeasures,\r\n  SVGCuadradoMeasures,\r\n  SVGRedondoMeasures,\r\n  SVGCuadradoFresadoMeasures,\r\n} from \"../assets/imanes/svgs\";\r\n\r\nconst tables_default = [\r\n  {\r\n    form: \"redondo\",\r\n    measure_format: \"AxB\",\r\n    svg: SVGRedondoMeasures,\r\n    items: [],\r\n  },\r\n  {\r\n    form: \"cuadrado\",\r\n    measure_format: \"AxBxC\",\r\n    svg: SVGCuadradoMeasures,\r\n    items: [],\r\n  },\r\n  {\r\n    form: \"redondo fresado\",\r\n    measure_format: \"AxB D-d\",\r\n    svg: SVGRedondoFresadoMeasures,\r\n    items: [],\r\n  },\r\n  {\r\n    form: \"cuadrado fresado\",\r\n    measure_format: \"AxBxC D-d\",\r\n    svg: SVGCuadradoFresadoMeasures,\r\n    items: [],\r\n  },\r\n];\r\n\r\nexport default function Imanes() {\r\n  const context = useOutletContext();\r\n\r\n  const [tables, setTables] = useState(tables_default);\r\n  const [arrastreItems, setArrastreItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tables_ = [...tables_default];\r\n    const DB = structuredClone(DB_ALL);\r\n\r\n    tables_.map((table) => {\r\n      const items_ = DB.filter(\r\n        (item) =>\r\n          item.categorie === \"imanes\" &&\r\n          item.subcategorie === \"neodimio\" &&\r\n          item.info?.forma === table.form\r\n      );\r\n\r\n      items_.sort((a, b) => {\r\n        return (\r\n          a?.measures?.largo - b?.measures?.largo ||\r\n          a?.measures?.ancho - b?.measures?.ancho ||\r\n          a?.measures?.alto - b?.measures?.alto\r\n        );\r\n      });\r\n\r\n      table.items = items_;\r\n\r\n      return table;\r\n    });\r\n\r\n    const arrastre_ = DB.filter(\r\n      (item) => item.categorie === \"imanes\" && item.subcategorie === \"arrastre\"\r\n    );\r\n\r\n    setTables(tables_);\r\n    setArrastreItems(arrastre_);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"max-w-[80%] text-center space-y-4 font-semibold prose dark:prose-invert\">\r\n        <p>\r\n          <i>Todos</i> los imanes presentados en las tablas son de{\" \"}\r\n          <i>neodimio</i> de alta potencia y sus medidas están en{\" \"}\r\n          <i>milímetros</i>.\r\n          <br />\r\n          Seleccione la forma que le interese y revise las medidas y precios. En\r\n          la tabla podrá ver que varia el precio por unidad según la cantidad.\r\n          <br />\r\n          Las medidas con <span className=\"bg-divider px-1\">fondo gris</span> es\r\n          por falta de stock.\r\n          <br />\r\n          Consulte por medidas no listadas.\r\n        </p>\r\n\r\n        <p className=\"font-size-secondary text-neutral-400\">\r\n          Los precios pueden variar.\r\n        </p>\r\n      </section>\r\n\r\n      <section className=\"w-full text-center md:flex flex-col items-center\">\r\n        <Tabs\r\n          aria-label=\"Categorias del imanes\"\r\n          classNames={{\r\n            tabList:\r\n              \"bg-gradient-to-t from-custom1 to-custom1-3 flex-wrap justify-center w-full\",\r\n            tabContent:\r\n              \"text-custom2 font-bold group-data-[selected=true]:text-white capitalize whitespace-normal\",\r\n            cursor: \"bg-gradient-to-t from-custom2 to-custom2-10\",\r\n            panel: \"mt-4 flex flex-col items-center gap-2 w-full\",\r\n            tab: \"w-fit\",\r\n          }}\r\n        >\r\n          {tables.map((table) => (\r\n            <Tab key={table.form} title={table.form}>\r\n              <div className=\"flex items-center justify-center h-[250px]\">\r\n                <table.svg className=\"w-full h-full\" />\r\n              </div>\r\n\r\n              <TablePrices\r\n                tableAriaLabel={`Tabla de precios: ${table.form}`}\r\n                measureFormat={table.measure_format}\r\n                rows={table.items}\r\n                cart={context.cart.value}\r\n                handleAdd={context.cart.add}\r\n                setItemToComparate={context.setMagnetData}\r\n              />\r\n            </Tab>\r\n          ))}\r\n\r\n          <Tab key=\"drag\" title=\"De arrastre\">\r\n            <DragMagnets\r\n              rows={arrastreItems}\r\n              cart={context.cart.value}\r\n              handleAdd={context.cart.add}\r\n              setItemToComparate={context.setMagnetData}\r\n            />\r\n          </Tab>\r\n        </Tabs>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"names":["rowsPerView","TablePrices","_ref","setItemToComparate","tableAriaLabel","measureFormat","rows","cart","handleAdd","ref","useRef","isInView","useInView","totalVisibleRows","setTotalVisibleRows","useState","visibleRows","slice","showMore","useEffect","_jsx","className","scrollStyle","children","_jsxs","colSpan","map","item","_item$price_data","noStock","inCart","id","href","title","label","Button","color","isIconOnly","onPress","CompareIcon","price_data","prices_qtts","Object","entries","_ref2","qtt","price","inCart_qtt","Number","toPriceFormat","ButtonAddCart","size","itemData","qtt_","concat","length","cols","cols_measure","alto","peso","fuerza","_Fragment","SVGDragMagnetMeasures","col","_item$measures","measures","PriceLabel","tables_default","form","measure_format","svg","SVGRedondoMeasures","items","SVGCuadradoMeasures","SVGRedondoFresadoMeasures","SVGCuadradoFresadoMeasures","Imanes","context","useOutletContext","tables","setTables","arrastreItems","setArrastreItems","tables_","DB","structuredClone","DB_ALL","table","items_","filter","_item$info","categorie","subcategorie","info","forma","sort","a","b","_a$measures","_b$measures","_a$measures2","_b$measures2","_a$measures3","_b$measures3","largo","ancho","arrastre_","Tabs","classNames","tabList","tabContent","cursor","panel","tab","Tab","value","add","setMagnetData","DragMagnets"],"sourceRoot":""}